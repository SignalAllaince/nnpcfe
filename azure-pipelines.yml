trigger:
  - master

variables:
  azureServiceConnectionName: 'chatfe1'
  webAppName: 'chatdesk'
  environmentName: 'chatbot_ui'
  vmImageName: 'ubuntu-latest'
  projectRoot: $(System.DefaultWorkingDirectory)

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)

        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '18.x'
            displayName: 'Install Node.js'

          - script: |
              npm install
              npm run build --if-present
            displayName: 'npm install and build'

          - task: CopyFiles@2
            displayName: 'Copy files'
            inputs:
              SourceFolder: '$(projectRoot)'
              Contents: '**'  # Include all files and folders recursively
              TargetFolder: '$(Build.ArtifactStagingDirectory)'

          - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
            displayName: 'Publish artifact'
            artifact: drop

  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: Deploy
        displayName: Deploy
        environment: $(environmentName)
        pool:
          vmImage: $(vmImageName)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureWebApp@1
                  displayName: 'Azure Web App Deploy: chatbot_ui'
                  inputs:
                    azureSubscription: $(azureServiceConnectionName)
                    appType: webAppLinux
                    appName: $(webAppName)
                    package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
                    startUpCommand: 'pm2 serve /home/site/wwwroot --spa --no-daemon'
